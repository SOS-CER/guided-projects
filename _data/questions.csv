id,lab,image,question,answer1,answer2,answer3,answer4,answer5,answer6,answer7,answer8,answer9,answer10
compareToReturn,lab1,,The <code>compareTo<\/code> method should return 0 when...,C|the <code>.equals<\/code> method returns true,the <code>.equals<\/code> method returns false,C|the two objects being compared should be considered equal to each other,'this' object should appear <emphasis>before<\/emphasis> the 'other' object,'this' object should appear <emphasis>after<\/emphasis> the 'other' object,,,,,
coverage,lab1,,The JUnit test cases you write for your <strong>DataStructures<\/strong> project must satisfy what coverage threshold before teaching staff test cases will run?,C|100% method coverage,C|80% statement coverage,70% statement coverage,80% branch coverage,80% method coverage,,,,,
insertionSort,lab1,,What is the worst-case runtime of <strong>insertion sort<\/strong>?,C|O(n<sup>2<\/sup>),O(n),O(n<sup>3<\/sup>),O(log n),O(1),,,,,
naturalOrdering,lab1,,The <strong>natural ordering<\/strong> of an aribtrary object is defined by implementing...,C|<code>Comparable<\/code> interface; <code>compareTo<\/code> method,<code>Comparable<\/code> interface; <code>compare<\/code> method,<code>Comparator<\/code> interface; <code>compareTo<\/code> method,<code>Comparator<\/code> interface; <code>compare<\/code> method,<code>.equals<\/code>,,,,,
sortingAlgorithms,lab1,,Which of the following sorting algorithms were <strong>NOT<\/strong> discussed in class?,insertion sort,C|shell sort,selection sort,counting sort,radix sort,bubble sort,bogo sort,C|gnome sort,C|tim sort,
sorterInterface,lab1,,"By default, all non-static methods in an interface are...",C|public,C|abstract,private,void,final,protected,,,,
sorterNotComparable,lab1,,"Iin the <code>Sorter<\/code> interface header, why did we not declare <code>E<\/code> to instead be <code>E extends Comparable<E><\/code>?",C|Not all sorting algorithms are comparison-based,the code would not compile,Restricting <code>E<\/code> to <code>extends Comparable<E><\/code> only works in concrete classes,interfaces are public,,,,,,
scannerDelimeter,lab1,,How can a <code>Scanner<\/code> be used to read a (simple) input CSV file?,"C|specify <code>.useDelimeter(\"",\"")<\/code>",use the default delimeter,<code>Scanner<\/code> cannot be used to process CSV files,,,,,,,
selectionSortAlreadySorted,lab1,,What is the worst-case runtime of <strong>selection sort<\/strong> if the elements are <em>already</em> in sorted order?,C|O(n<sup>2<\/sup>),O(n),O(n<sup>3<\/sup>),O(log n),O(1),,,,,
insertionSortAlreadySorted,lab1,,What is the worst-case runtime of <strong>insertion sort<\/strong> if the elements are <em>already</em> in the desired sorted order?,O(n<sup>2<\/sup>),C|O(n),O(n<sup>3<\/sup>),O(log n),O(1),,,,,
testAbstractClass,lab1,,How can you test an abstract class?,C|test the methods through the concrete classes that extend the abstract class,create an instance of the abstract class and call its methods,create an abstracted test class,you cannot test the methods implemented in an abstract class,,,,,,
designPatterns,lab1,,Which of the following are <strong>software design patterns<\/strong>?,C|model-view-controller,C|strategy,C|singleton,data structure,abstract data type,,,,,
countingSort,lab1,,What is the worst-case runtime of <strong>counting sort<\/strong> when sorting positive integers?,"C|O(n+k), where k is the range of the integers being sorted","O(wn), where w is the range of the integers being sorted","O(n+k), where k is the number of digits in the largest integer","O(wn), where w is the number of digits in the largest integer",,,,,,
bubbleRadix,lab1,,What is the worst-case runtime of <strong>bubble sort<\/strong> if the elements are <em>already<\/em> sorted in the desired order?,O(n<sup>2<\/sup>),C|O(n),O(n<sup>3<\/sup>),O(log n),O(1),,,,,
bubbleRadix,lab1,,What is the worst-case runtime of <strong>radix sort<\/strong> when sorting positive integers?,"O(n+k), where k is the range of the integers being sorted","O(wn), where w is the range of the integers being sorted","O(n+k), where k is the number of digits in the largest integer","C|O(wn), where w is the number of digits in the largest integer",,,,,,
bubbleRadix,lab1,,What is the worst-case runtime of <strong>bubble sort<\/strong> if the elements are originally in a <em>random<\/em> order?,C|O(n<sup>2<\/sup>),O(n),O(n<sup>3<\/sup>),O(log n),O(1),,,,,
sortingReview,lab1,,Which of the following sorting algorithms are <strong>comparison-based<\/strong>?,C|bubble sort,C|insertion sort,C|selection sort,C|bogosort,radix sort,counting sort,,,,
noTSTests,lab1,,Which of the following statements is\/are <strong>true<\/strong> if the teaching staff test cases did not run against your software on your last push to NCSU GitHub before the deadline?,Your coding activity grade will be multiplied by 50%,"C|Your coding activity grade is multiplied by the % of passing TS test cases, so your coding activity grade will be 0 since 0% of teaching staff test cases passed",The last build that successfully executed teaching staff test cases will be used for grading,You will receive an extension on the assignment,,,,,,
sortingReview,lab1,,Which of the following algorithms can sort the integers 1...2<sup>5<\/sup> (in a random order) in <strong>linear<\/strong> time <em>in the worst case<\/em>?,C|counting sort,C|radix sort,insertion sort,selection sort,bubble sort,bogosort,selection sort,,,
sortingReview,lab1,,Which of the following sorting algorithms require extra <em>space<\/em> beyond the original input array of elements?,C|counting sort,C|radix sort,insertion sort,selection sort,bubble sort,bogosort,selection sort,,,
listExample,lab2,,"What list would be produced after executing <code>list.addFirst(3);  list.addFirst(1);  list.addLast(2);  list.set(1, 2);<\/code>?","C|[1,2,2]","[1,3,2]","[2,3,2]","[2,1,3]",,,,,,
arrayListAmortized,lab2,,"The <strong>amortized cost</strong> of each insertion at the end of a dynamically-resizing array-based list is ____ if the array grows by 1 on each resize, and _____ if the array doubles on each resize.",C|O(n); O(1),O(n<sup>2<\/sup>);  O(n),O(n);  O(log n),O(1);  O(n),,,,,,
iteratorExample,lab2,,"Given the <code>list = [2, 4, 3, 5, 1]<\/code>, what is returned after: <br><code>Iterator<Integer> it = list.iterator(); <br>it.next();<br>it.next();<br>it.next();<br>it.next();<br>it.next();<br>return it.hasNext()<\/code>",C|FALSE,NoSuchElementException,1,5,TRUE,null,,,,
listOperationPerformance,lab2,,Which of the following list operations have O(1) worst-case runtime if the list is implemented as a <strong>singly linked list with a tail pointer<\/strong>?,C|<code>size()<\/code>,C|<code>isEmpty()<\/code>,C|<code>last()<\/code>,C|<code>first()<\/code>,<code>removeLast()<\/code>,<code>get(index)<\/code>,,,,
positionalListExample,lab2,,"What <strong>positional list<\/strong> is produced after executing:<br><code>// Start with an empty list<br>Position<Integer> p1 = list.addFirst(1);<br>Position<Integer> p2 = list.addLast(2);<br>Position<Integer> p3 = list.addBefore(p1, 3);<br>Position<Integer> p4 = list.addAfter(p3, 4);<br>list.remove(p1);<\/code>","C|[3, 4, 2]","[3, 1, 4]","[3, 1, 2]","[3, 2, 4]","[1, 3, 2]","[1, 2, 3]",,,,
positionalPerformance,lab2,,Which of the following positional list operations have <code>O(1)<\/code> worst-case runtime if the positional list is implemented as a <strong>doubly linked list with front and tail pointers<\/strong>?,C|<code>size()<\/code>,C|<code>before(p)<\/code>,C|<code>after(p)<\/code>,C|<code>remove(p)<\/code>,"C|<code>addAfter(p, e)<\/code>",C|<code>last()<\/code>,,,,
iteratorExceptions,lab2,,Which of the following exceptions should be thrown by <code>Iterator<\/code>s?,C|<code>NoSuchElementException<\/code> if the client attempts to call <code>it.next()<\/code> when there are no more elements to process,C|<code>IllegalStateException<\/code> if the client attempts to call <code>it.remove()<\/code> when the client has not called <code>it.next()<\/code> before,<code>IndexOutOfBoundsException<\/code> if the client attends to call <code>it.next()<\/code> on an empty list,<code>NoSuchElementException<\/code> if the client attempts to call <code>it.hasNext()<\/code> on an empty list,<code>null</code> when the client attempts to call <code>it.next()<\/code> on an empty list,,,,,
positionalIterators,lab2,,"Given the positional <code>list = [ Position[\""dog\""], Position[\""cat\""], Position[\""bird\""] ]<\/code>, what would be returned from the following operation?<br><code>list.iterator().next()<\/code>",C|<code>dog<\/code>,"<code>Position[\""dog\""]<\/code>",<code>cat<\/code>,"<code>Position[\""cat\""]<\/code>",,,,,,
positionalIterators,lab2,,"Given the positional <code>list = [ Position[\""dog\""], Position[\""cat\""], Position[\""bird\""] ]<\/code>, what would be returned from the following operation?<br><code>list.positions().next()<\/code>",<code>dog<\/code>,"C|<code>Position[\""dog\""]<\/code>",<code>cat<\/code>,"<code>Position[\""cat\""]<\/code>",,,,,,
listReview,lab2,,Suppose our singly linked list maintained <em>only<\/em> a head pointer and <strong>no<\/strong> tail pointer. What would be the worst-case runtime of <code>last()<\/code>?,C|O(n),O(1),O(n<sup>2<\/sup>),O(log n),,,,,,
listReview,lab2,,What is the worst-case runtime of <em>inserting<\/em> at the front of an <em>array-based list<\/em>?,C|O(n),O(1),O(n<sup>2<\/sup>),O(log n),,,,,,
listReview,lab2,,What is the worst-case runtime of <em>removeLast()<\/em> in a <em>doubly-linked list<\/em> that has both a front and tail pointer?,O(n),C|O(1),O(n<sup>2<\/sup>),O(log n),,,,,,
stackADT,lab3,,What are the contents of the following <strong>stack<\/strong> after performing the operations below?<br><code>// Start with an empty stack<br>stack.push(3)<br>stack.push(2)<br>stack.pop()<br>stack.push(1)<br>stack.top()<br>stack.pop()<\/code>,C|(bottom) [3] (top),"(bottom) [3, 1] (top)","(bottom) [3, 2] (top)",(bottom) [1] (top),,,,,,
linkedStack,lab3,,"When implementing a stack as a <strong>singly-linked list<\/strong> with both head and tail pointers, what is the worst-case runtime of performing <code>top()<\/code> if the <em>top<\/em> of the stack is at the <strong>front<\/strong> of the list?",C|O(1),O(n),O(n<sup>2<\/sup>),O(log n),,,,,,
linkedStack,lab3,,"When implementing a stack as a <strong>singly-linked list<\/strong> with both head and tail pointers, what is the worst-case runtime of performing <code>push(e)<\/code> if the <em>top<\/em> of the stack is at the <strong>tail<\/strong> of the list?",C|O(1),O(n),O(n<sup>2<\/sup>),O(log n),,,,,,
linkedStack,lab3,,"When implementing a stack as a <strong>singly-linked list<\/strong> with both head and tail pointers, what is the worst-case runtime of performing <code>pop()<\/code> if the <em>top<\/em> of the stack is at the <strong>tail<\/strong> of the list?",C|O(n),O(1),O(n<sup>2<\/sup>),O(log n),,,,,,
queueADT,lab3,,What are the contents of the following <strong>queue<\/strong> after performing the operations below?<br><code>// Start with an empty queue<br>q.enqueue(3)<br>q.enqueue(2)<br>q.dequeue()<br>q.enqueue(1)<br>q.front()<br>q.enqueue(4)<\/code>,"C|(front) [2, 1, 4] (back)","(front) [2, 1] (back)","(front) [4, 1, 2] (back)","(front) [2, 4, 1] (back)",,,,,,
circularBuffer,lab3,,What is the worst-case performance of <code>dequeue()<\/code> in a dynamically resizing <strong>array-based circular buffer<\/strong>?,C|O(1),O(n),O(n<sup>2<\/sup>),O(log n),,,,,,
stackQueueReview,lab3,,What software design pattern allowed you to delegate your <code>LinkedStack<\/code> implemention to your existing <code>SinglyLinkedList<\/code> implementation?,C|adapter pattern,model-view-controller pattern,singleton pattern,strategy pattern,,,,,,
stackQueueReview,lab3,,Suppose you implement a <strong>stack<\/strong> as a <strong>positional list<\/strong>. What is the worst-case runtime of the <code>push(element)<\/code> operation if the <em>top<\/em> of the stack is at the front of the positional list?,C|O(1),O(n),O(log n),O(n<sup>2<\/sup>),,,,,,
stackQueueReview,lab3,,Suppose you implement a <strong>queue<\/strong> as a <strong>positional list<\/strong>. What is the worst-case runtime of the <code>dequeue()<\/code> operation if the <em>front<\/em> of the queue is at the <strong>end<\/strong> of the positional list?,C|O(1),O(n),O(log n),O(n<sup>2<\/sup>),,,,,,
mergesort,lab4,,What is the worst-case runtime of <strong>mergesort<\/strong> if the elements are <em>already<\/em> sorted in the desired order?,O(n<sup>2<\/sup>),C|O(n log n),O(n),O(log n),O(n<sup>3<\/sup>),,,,,
mergesort,lab4,,What is the worst-case runtime of <strong>mergesort<\/strong> if the elements are originally in a <em>random<\/em> order?,O(n<sup>2<\/sup>),C|O(n log n),O(n),O(log n),O(n<sup>3<\/sup>),,,,,
quicksort,lab4,,"What is the worst-case runtime of <strong>quicksort<\/strong> if the elements are <em>already<\/em> sorted in the desired order, and the first element is selected as the pivot each time?",C|O(n<sup>2<\/sup>),O(n log n),O(n),O(log n),O(n<sup>3<\/sup>),,,,,
quicksort,lab4,,"What is the <strong>average<\/strong> runtime of <strong>quicksort<\/strong> if the elements are <em>already<\/em> sorted in the desired order, and a random pivot element is selected each time?",O(n<sup>2<\/sup>),C|O(n log n),O(n),O(log n),O(n<sup>3<\/sup>),,,,,
quicksort,lab4,,"When performing <strong>quicksort<\/strong> and selecting the smallest element to be the pivot each time, the algorithm perfoms exactly the same as what other sorting algorithm?",C|selection sort,insertion sort,bubble sort,mergesort,radix sort,,,,,
recursiveSortingReview,lab4,,Which of the following terms correctly describe(s) the <strong>mergesort<\/strong> algorithm presented in this lab?,C|stable,C|in-place,unstable,distributed,C|recursive,,,,,
recursiveSortingReview,lab4,,Which of the following terms correctly describe(s) the <strong>quicksort<\/strong> algorithm presented in this lab?,stable,C|in-place,C|unstable,distributed,C|recursive,,,,,
recursiveSortingReview,lab4,,Which of the following recurrence relations describes the worst-case number of comparisons performed in <strong>mergesort<\/strong>?,C|T(n) = 0  for n < 2; T(n) = 2T(n/2)+n-1  for n >= 2,T(n) = 0  for n < 2; T(n) = T(n-1)+n-1  for n >= 2,T(n) = 0  for n < 2; T(n) = T(n/2)+n-1  for n >= 2,T(n) = 0  for n < 2; T(n) = 2T(n-1)+n-1  for n >= 2,,,,,,
recursiveSortingReview,lab4,,Which of the following recurrence relations describes the worst-case number of comparisons performed in <strong>quicksort<\/strong>?,T(n) = 0  for n < 2; T(n) = 2T(n/2)+n-1  for n >= 2,C|T(n) = 0  for n < 2; T(n) = T(n-1)+n-1  for n >= 2,T(n) = 0  for n < 2; T(n) = T(n/2)+n-1  for n >= 2,T(n) = 0  for n < 2; T(n) = 2T(n-1)+n-1  for n >= 2,,,,,,
listMapReview,lab5,,Which of the following data structures implement <strong>sorted maps<\/strong>?,C|search table,C|skip list,linked list,,,,,,,
sortedMap,lab5,,What is the advantage of using a <em>sorted map<\/em> instead of an <em>unsorted<\/em> map?,C|lookUps are more efficient in sorted maps,sorted maps use less space,lookUps are less efficient in sorted maps,sorted maps take up more space,unsorted maps do not allow key-value entries,,,,,
listMapReview,lab5,,Which list-based map data structure features the most efficient <em>average-case<\/em> (expected) performance for <code>remove(key)<\/code>?,C|skip list,search table,unordered arraylist map,unordered linked map,,,,,,
listMapReview,lab5,,Which of the following map data structures have <strong>average-case<\/strong> (expected) O(n) performance for the <strong>remove(k)<\/strong> operation?,C|unordered arralist map,C|unordered linked map,C|search table,skip list,,,,,,
arrayMap,lab5,,The <strong>transpose<\/strong> heuristic helps improve which of the following costs?,C|average-case,worst-case,best-case,,,,,,,
arrayMap,lab5,,"Suppose we start with an unordered arraylist implementation of a map that has keys in the order <code>[ dog, cat, bird, snake ]<\/code>. What are the contents of the list after performing the following operations, assuming the <em>transpose<\/em> heuristic is implemented?<br><code>map.get(\""cat\"")<br>map.get(\""snake\"")<br>map.get(\""snake\"")<br>map.get(\""bird\"")<\/code>","C|[ cat, snake, bird, dog ]","[ cat, bird, dog, snake ]","[ snake, dog, bird, cat ]","[ cat, snake, dog, bird ]",,,,,,
linkedMap,lab5,,Which of the following operations have worst-case O(n) performance in an unordered linked map?,"C|<code>put(k,v)<\/code>",C|<code>remove(k)<\/code>,C|<code>get(k)<\/code>,<code>size()<\/code>,,,,,,
linkedMap,lab5,,"Suppose we start with an unordered linkedlist implementation of a map that has keys in the order <code>[ dog, cat, bird, snake ]<\/code>. What are the contents of the list after performing the following operations, assuming the <em>move-to-front<\/em> heuristic is implemented?<br><code>map.get(\""cat\"")<br>map.get(\""snake\"")<br>map.get(\""snake\"")<br>map.get(\""bird\"")<\/code>","C|[ bird, snake, cat, dog ]","[ bird, cat, dog, snake ]","[ bird, dog, snake, cat ]","[ cat, snake, dog, bird ]",,,,,,
searchTable,lab5,,What special algorithm is used to quickly locate entries in a search table?,C|binary search,sequential search,mergesort,quicksort,,,,,,
searchTable,lab5,,"What keys are examined when performing <code>get(17)<\/code> in a search table with keys <code>[ 5, 10, 15, 20, 25, 30, 35 ]<\/code>?",C| 20 -- 10 -- 15,20 -- 15 -- 10,20 -- 5 -- 10,5 -- 10 -- 15,5 -- 10 -- 15 -- 20,,,,,
skipList,lab5,,What type of algorithm is used when inserting into skip lists?,C|randomized,divide-and-conquer,brute-force,greedy,dynamic programming,,,,,
skipList,lab5,,What is <em>expected<\/em> space usage of a skip list that stores <em>n<\/em> entries?,C|O(n),O(log n),O(1),O(n<sup>2<\/sup>),,,,,,
skipList,lab5,,Which of the following operations have average-case O(log n) performance in a skip list map?,"C|<code>put(k,v)<\/code>",C|<code>remove(k)<\/code>,C|<code>get(k)<\/code>,<code>size()<\/code>,,,,,,
treeADT,lab6,animalTree,What is returned from <code>tree.numChildren(tree.root())<\/code>?,C|3,1,2,4,,,,,,
treeADT,lab6,animalTree,What is returned from <code>tree.children(tree.root())<\/code>?,"C|<code>[ Position[cat], Position[bird], Position[horse] ]<\/code>","<code>[ cat, bird, horse ]<\/code>","<code>[ Position[dog], Position[bird], Position[goat] ]<\/code>","<code>[ dog, bird, goat ]<\/code>",,,,,,
treeADT,lab6,animalTree,"What is returned after performing the following operations:<br><code>//Assume position p = Position[lizard]<br>Position x = tree.addChild(p,\""frog\"")<br>tree.parent(tree.parent(tree.parent(x)))<\/code>",C|Position[dog],dog,Position[bird],bird,Position[lizard],lizard,,,,
treeADT,lab6,animalTree,What is the height of the tree?,C|2,3,1,undefined,4,8,,,,
traversals,lab6,animalTree,What is the <strong>postorder<\/strong> traversal of the tree?,"C|[ cat, snake, goat, lizard, bird, fish, horse, dog]","[ snake, goat, lizard, fish, bird, cat, horse, dog ]","[ dog, cat, bird, snake, goat, lizard, fish, horse ]","[ dog, cat, bird, horse, snake, goat, lizard, fish ]",,,,,,
traversals,lab6,animalTree,What is the <strong>levelorder<\/strong> traversal of the tree?,"[ cat, snake, goat, lizard, bird, fish, horse, dog]","[ snake, goat, lizard, fish, bird, cat, horse, dog ]","[ dog, cat, bird, snake, goat, lizard, fish, horse ]","C|[ dog, cat, bird, horse, snake, goat, lizard, fish ]",,,,,,
traversals,lab6,animalTree,What is the <strong>preorder<\/strong> traversal of the tree?,"[ cat, snake, goat, lizard, bird, fish, horse, dog]","[ snake, goat, lizard, fish, bird, cat, horse, dog ]","C|[ dog, cat, bird, snake, goat, lizard, horse, fish ]","[ dog, cat, bird, horse, snake, goat, lizard, fish ]",,,,,,
binaryTreeADT,lab6,binaryAnimalTree,"What is returned after performing the following operations:<br><code>//Assume position p = Position[cat]<br>Position x = tree.addRight(p,\""frog\"")<br>tree.sibling(tree.left(tree.right(tree.parent(tree.parent(x)))))<\/code>",C|Position[lizard],lizard,Position[snake],snake,Position[fish],fish,,,,
linkedBinaryTree,lab6,binaryAnimalTree,What is the <strong>inorder<\/strong> traversal of the tree?,"C|[ horse, cat, dog, snake, fish, bird, lizard ]","[ horse, cat, snake, fish, bird, lizard, dog ]","[ horse, cat, dog, fish, snake, lizard, bird ]","[ horse, cat, dog, fish, snake, bird, lizard ]",,,,,,
treeReview,lab6,,What is the height of the tallest possible tree that contains <em>n<\/em> nodes?,C|n-1,n,n+1,n/2,,,,,,
treeReview,lab6,,"What is the height of a tree that contains only a single node (in other words, a root node that has no children)?",C|0,undefined,1,2,,,,,,
treeReview,lab6,,What is the height of the shortest possible binary tree if the tree contains a total of 7 nodes?,C|2,7,3,1,4,,,,,
binarySearchTree,lab7,animalBSTinsert,"Where would \""hyena\"" be inserted into the binary search tree?",C|node 5,node 4,node 3,node 6,node 7,node 8,node 1,node 2,,
binarySearchTree,lab7,animalBST,"What would be the new root element if <code>tree.remove(\""horse\"")<\/code> were performed?",C|iguana,koala,elk,lizard,cat,,,,,
binarySearchTree,lab7,animalBST,"What would be the element in <code>tree.left(tree.right(tree.root()))<\/code> if <code>tree.remove(\""horse\"")<\/code> were performed?",iguana,C|koala,elk,lizard,cat,,,,,
binarySearchTree,lab7,animalBST,"What would be the new element in the <em>root position's left child<\/em> if <code>tree.remove(\""cat\"")<\/code> were performed?",C|dog,elk,bird,horse,iguana,,,,,
binarySearchTree,lab7,animalBST,What is the <strong>inorder<\/strong> traversal of a binary search tree?,"[ bird, cat, dog, elk, horse, koala, iguana, lizard, snake ]","C|[ bird, cat, dog, elk, horse, iguana, koala, lizard, snake ]","[ elk, koala, bird, dog, iguana, snake, cat, lizard, horse ]","[ horse, cat, lizard, bird, dog, iguana, snake, elk, koala ]",,,,,,
binarySearchTree,lab7,,"For this course, when deleting from a binary search tree, we will always replace (if needed) with ____.",C|inorder successor,inorder predecessor,preorder successor,preorder predecessor,postorder succesor,postorder predecessor,,,,
avlTree,lab7,avlImbalance,"Suppose the node with element \""koala\"" was just inserted into the AVL tree (no restructurings have taken place yet). In which node is the <em>height-balance<\/em> property now violated?",C|horse,koala,iguana,lizard,cat,snake,,,,
avlTree,lab7,avlImbalance,"What node would be labeled \""z\"" when performing <strong>trinode restructuring<\/strong>?",C|horse,koala,iguana,lizard,cat,snake,,,,
avlTree,lab7,avlImbalance,"What node would be labeled \""y\"" when performing <strong>trinode restructuring<\/strong>?",horse,koala,iguana,C|lizard,cat,snake,,,,
avlTree,lab7,avlImbalance,"What node would be labeled \""x\"" when performing <strong>trinode restructuring<\/strong>?",horse,koala,C|iguana,lizard,cat,snake,,,,
avlTree,lab7,avlImbalance,What element is in the root node <em>after<\/em> performing <strong>trinode restructuring<\/strong>?,horse,koala,C|iguana,lizard,cat,snake,,,,
avlTree,lab7,avlImbalance,What element is in <code>tree.left(tree.right(tree.root())) <em>after<\/em> performing <strong>trinode restructuring<\/strong>?,horse,C|koala,iguana,lizard,cat,snake,,,,
splayTree,lab7,splayTree,"Suppose the node with element \""koala\"" was just inserted into the <strong>splay tree<\/strong> (no restructurings have taken place yet). What is the element in the node that will be splayed?",C|koala,horse,iguana,lizard,cat, snake,,,,
splayTree,lab7,splayTree,What is the element in <code>tree.root()<\/code> after performing <code>splay<\/code>?,C|koala,horse,iguana,lizard,cat, snake,,,,
splayTree,lab7,splayTree,What is the first rotation (or set of rotations) that will be performed when splaying?,C|zig-zag,zig-zig,zig,zag,no rotations will be performed,zig-zag-zoom,,,,
splayTree,lab7,splayTree,What is the element in <code>tree.right(tree.left(tree.root()))<\/code> after completing the <code>splay<\/code> operation?,koala,horse,C|iguana,lizard,cat, snake,,,,
splayTree,lab7,splayAnimals,"What is the element in the node that is splayed when performing <code>tree.remove(\""horse\"")<\/code?",koala,horse,iguana,C|lizard,cat, snake,,,,
rbTree,lab7,rbTree1,Is the tree a valid red-black tree?,C|No,Yes,,,,,,,,
rbTree,lab7,rbTree1,What red-black tree property (or properties) are violated in the tree?,C|root property,C|black depth property,red property,leaf property,,,,,,
rbTree,lab7,rbTree2,Is the tree a valid red-black tree?,C|Yes,No,,,,,,,,
rbTree,lab7,rbTree2,What <em>elements<\/em> are in the root node of the corresponding 2-4 tree represented by this red-black tree?,"C|[cat, horse]","[ horse, cat ]","[ cat, horse, lizard ]","[ horse, lizard ]",,,,,,
rbTree,lab7,rbTree2,"What red-black tree property (or properties) are violated if we insert \""tiger\"" into the tree?",C|red property,root property,black-depth property,leaf property,,,,,,
rbTree,lab7,rbTreeTiger,"If the red-black tree were represented by a corresponding 2-4 tree, what condition would be represented after inserting \""tiger\""?",C|overflow,underflow,transfer,fusion,,,,,,
rbTree,lab7,rbTreeDelete,"If the red-black tree were represented by a corresponding 2-4 tree, what condition would be represented after deleting \""bird\""?",overflow,C|underflow,split,miscoloring,,,,,,
rbTree,lab7,rbTreeDelete,What condition is represented by <code>tree.left(tree.left(tree.root()))<\/code>?,C|double-black,double-red,double leaf,miscoloring,,,,,,
searchTreeReview,lab7,,Which of the following search trees have <strong>worst-case<\/strong> height of O(log n)?,C|AVL tree,C|red-black tree,C|2-4 Tree,splay tree,binary search tree,,,,,
searchTreeReview,lab7,,What is the amortized cost of <em>each<\/em> insertion into a splay tree?,C|O(log n),O(n),O(n<sup>2<\/sup>),O(1),,,,,,
searchTreeReview,lab7,,Which of the following data structures is/are <strong>binary search trees<\/strong>?,C|AVL tree,C|splay tree,C|red-black tree,2-4 tree,,,,,,
searchTreeReview,lab7,,Which of the following data structures is/are <em>always perfectly balanced<\/em>?,C|2-4 tree,AVL tree,splay tree,red-black tree,,,,,,
searchTreeReview,lab7,,"The <strong>worst-case<\/strong> performance of <code>put<\/code>, <code>get<\/code>, and <code>remove<\/code> in a search tree depends on _____.",C|the height of the tree,C|the length of the path from the root to the deepest leaf node,the median key in the tree,the maximum key in the tree,the leftmost entry in the tree,,,,,
hashMapReview,lab8,,Which of the following <strong>collision resolution<\/strong> strategies were <em>not<\/em> discussed in class?,C|cuckoo hashing,double hashing,coalesced chaining,linear probing,separate chaining,,,,,
abstractHashMap,lab8,,"What is the <em>expected</em> performance of <code>put<\/code>, <code>get<\/code>, and <code>remove<\/code> in a hash map?",C|O(1),O(n),O(log n),O(n log n),O(n<sup>2<\/sup>),,,,,
hashMapReview,lab8,,Which of the following <strong>collision resolution<\/strong> strategies are classified as <em>open addressing<\/em> strategies?,C|double hashing,C|linear probing,separate chaining,coalesced chaining,coalesced chaining with a cellar,,,,,
separateChaining,lab8,,Which data structure would be <em>most efficient<\/em> (in the worst-case) as the secondary map for a <strong>separate chaining hash map<\/strong>?,C|red-black tree,C|AVL tree,search table,linked list,,,,,,
abstractHashMap,lab8,,What is the correct order of steps required for hashing?,C| calculate hash code -- compress the hash code -- store in the hash table,calculate the compression function -- add the hash code -- store in the hash table,calculate the hash function -- subtract the compression function -- store in the hash table,calculate the hash code -- add the compression function -- store in the hash table,,,,,,
abstractHashMap,lab8,,Which of the following techniques were discussed in class for calculating <em>hash codes<\/em>?,C|additive hashing,C|polynomial hashing,C|cyclic shifting,multiply and divide,golden ratio,division,,,,
abstractHashMap,lab8,,Which of the following techniques were discussed in class for <em>compressing<\/em> hash codes?,additive hashing,polynomial hashing,cyclic shifting,C|multiply and divide,C|golden ratio,C|division,,,,
hashMapReview,lab8,,Which of the following <strong>hash table capacity<\/strong> options would be the best choice to use if our hash table uses <em>polynomial hashing with r = 24<\/em> and uses <em>division compression<\/em>?,C|67,25,96,576,,,,,,
separateChaining,lab8,,What is the <strong>worst-case<\/strong> runtime of a single <code>remove<\/code> from a hash map that uses <em>separate chaining<\/em> where the secondary map is a <em>splay tree<\/em>?,C|O(n),O(1),O(log n),O(n log n),O(n<sup>2<\/sup>),,,,,
separateChaining,lab8,,Which of the following best describes the <em>worst-case scenario<\/em> in terms of performance of a hash map that uses separate chaining?,C|all entries have different keys and hash to the same bucket,each entry has a different key and hashes to a different bucket,all entries have the same key,all entries have the same value,,,,,,
linearProbing,lab8,emptyHashTable,"Assume <em>h(k) = the number of characters in the key - 3<\/em>. Suppose we <code>put<\/code> the following entries in the hash map (using linear probing) in the following order: elk, horse, bird, elephant, camel, goldfish, bat. At which index would the entry with key \""bat\"" be stored?",C|4,1,3,5,7,6,0,2,,
linearProbing,lab8,linearProbingDelete,"Assume <em>h(k) = the number of characters in the key - 3<\/em>. Suppose we perform <code>put(\""dog\"")<\/code> into the hash map (using linear probing). At which index would the entry with key \""dog\"" be stored?",C|1,4,3,5,7,6,0,2,,
pqADT,lab9,,<strong>TRUE<\/strong> or <strong>FALSE<\/strong>: It is possible to remove an arbitrary entry from a priority queue regarless of where the entry is located in the priority queue.,C|FALSE,TRUE,,,,,,,,
pqADT,lab9,,What are the two phases of <strong>PQ-sort<\/em>?,C| insert every entry into a priority queue; then remove every entry from the priority queue,insert every entry into a hash table; then remove every entry from the hash table,insert every entry into a priority queue,insert every entry into a binary search tree,,,,,,
pqADT,lab9,,<strong>Insertion sort<\/strong> is a variable of <em>PQ-sort<\/em> where the priority queue is which data structure?,C|ordered list,unordered list,search tree,hash table,heap,,,,,
pqADT,lab9,,<strong>Selection sort<\/strong> is a variable of <em>PQ-sort<\/em> where the priority queue is which data structure?,C|unordered list,ordered list,search tree,hash table,heap,,,,,
pqADT,lab9,,<strong>Heap sort<\/strong> is a variable of <em>PQ-sort<\/em> where the priority queue is which data structure?,C|heap,ordered list,search tree,hash table,unordered list,,,,,
heap,lab9,,Priority queues are most efficiently implemented as what data structure?,C|array-based heap,list,search tree,hash table,link-based heap,,,,,
heap,lab9,,Heaps are <em>always<\/em>:,C|complete,proper,perfect,binary search trees,,,,,,
heap,lab9,heapInsert,"Where would the new node with the key \""goat\"" be inserted <em>initially<\/em> (before performing any upHeaps)?",C|7,1,2,3,4,5,6,,,
heap,lab9,heapDelete,How many <em>swaps<\/em> (including the initial swap to replace the removed key) are performed during <code>heap.deleteMin()<\/code>?,C|3,1,2,4,5,,,,,
heap,lab9,,The <strong>worst-case<\/strong> height of a heap is ___.,C|O(log n),O(n),O(1),O(n log n),O(n<sup>2<\/sup>),,,,,
pqReview,lab9,,The performance of heap operations is controlled by what property?,C|the height of the heap,whether the heap is a minheap or maxheap,the number of nodes in the lowest level of the tree,the type of array used,,,,,,
pqReview,lab9,,"If a <em>binary search tree<\/em> were used to implement the priority queue abstract data type, then <code>deleteMin()<\/code> would return which entry?",C|the leftmost entry in the tree,the rightmost entry in the tree,the entry at the deepest level,the leftmost entry in the lowest level of the tre,,,,,,
pqReview,lab9,,What is the worst-case performance of <strong>heapsort<\/strong>?,C|O(n log n),O(log n),O(n),O(n<sup>2<\/sup>),,,,,,
adaptableHeap,lab9,,"To be efficient, entries in an <strong>adaptable priority queue<\/strong> must be ____.",C|location-aware,self sufficient,binary search tree nodes,tracked using a hash map,,,,,,
adaptableHeap,lab9,,"If location-aware entries are used, then the <strong>worst-case<\/strong> performance of <code>replaceKey(e,k)<\/code>, <code>replaceValue(e,v)<\/code>, and <code>remove(e)<\/code> are ___.",C|O(log n),O(n),O(1),O(n<sup>2<\/sup>),,,,,,
pqReview,lab9,,"Which <em>abstract data type<\/em> would be most appropriate to model the following scenario: <br>Customers call a customer service hotline and stay on hold an average of 48 minutes. Customers are serviced in order of their reward credit card status (platinum, gold, silver, bronze, and regular tier statuses) and the time their call to customer service was placed. Consumers can decide to hang up at any time if they do not wish to wait on hold.",C|adaptable priority queue,priority queue,map,list,,,,,,
setADT,lab10,,"Given the following sets:<br><code>S<sub>1<\/sub> = { C, O, M, P, U, T, E, R }<br>S<sub>2<\/sub> = { S, C, I, E, N }<br>S<sub>3<\/sub> = { E, N, G, I, R }<\/code><br>What is the result of <code>S<sub>1<\/sub>.addAll(S<sub>2<\/sub>)<\/code>?","C|<code>S<sub>1<\/sub> = { C, O, M, P, U, T, E, R, S, I, N }<\/code>","<code>S<sub>2<\/sub> = { C, O, M, P, U, T, E, R, S, I, N }<\/code>","<code>S<sub>3<\/sub> = { C, O, M, P, U, T, E, R, S, I, N }<\/code>","<code>S<sub>1<\/sub> = { O, M, P, U, T, R }<\/code>","<code>S<sub>2<\/sub> = { O, M, P, U, T, R }<\/code>","<code>S<sub>1<\/sub> = { C, O, M, P, U, T, E, R, S, C, I, E, N }<\/code>",,,,
setADT,lab10,,"Given the following sets:<br><code>S<sub>1<\/sub> = { C, O, M, P, U, T, E, R }<br>S<sub>2<\/sub> = { S, C, I, E, N }<br>S<sub>3<\/sub> = { E, N, G, I, R }<\/code><br>What is the result of <code>S<sub>2<\/sub>.retainAll(S<sub>3<\/sub>)<\/code>?","C|<code>S<sub>2<\/sub> = { I, E, N }<\/code>","<code>S<sub>3<\/sub> = { I, E, N }<\/code>","<code>S<sub>2<\/sub> = { S, C }<\/code>","<code>S<sub>3<\/sub> = { S, C }<\/code>","<code>S<sub>1<\/sub> = { C, E, R }<\/code>",,,,,
setADT,lab10,,"Given the following sets:<br><code>S<sub>1<\/sub> = { C, O, M, P, U, T, E, R }<br>S<sub>2<\/sub> = { S, C, I, E, N }<br>S<sub>3<\/sub> = { E, N, G, I, R }<\/code><br>What is the result of <code>S<sub>3<\/sub>.removeAll(S<sub>1<\/sub>)<\/code>?","C|<code>S<sub>3<\/sub> = { N, G, I }<\/code>","<code>S<sub>1<\/sub> = { N, G, I }<\/code>","<code>S<sub>3<\/sub> = { E, N, G, I, R, C, O, M, P, U, T }<\/code>","<code>S<sub>1<\/sub> = { E, N, G, I, R, C, O, M, P, U, T }<\/code>",,,,,,
upTree,lab10,upTreeCount,How many <em>up trees<\/em> are in this forest?,C|4,1,2,3,5,,,,,
upTree,lab10,upTreeCount,What is the <code>count<\/code> of <code>Position[lion]<\/code>?,C|3,1,2,4,5,,,,,
upTree,lab10,upTreeCount,What <em>position<\/em> will be the overall root after performing <code>Position[lion].union(Position[squirrel])<\/code>?,C|<code>Position[lion]<\/code>,<code>Position[squirrel]<\/code>,<code>Position[bird]<\/code>,<code>Position[mouse]<\/code>,<code>Position[lizard]<\/code>,,,,,
upTree,lab10,upTreeCount,What is the <code>count<\/code> of <code>Position[tiger]<\/code>?,C|undefined,0,1,2,3,4,,,,
upTree,lab10,upTreeCount,What <em>position<\/em> is returned by <code>forest.find(Position[tiger])<\/code>?,C|<code>Position[bird]<\/code>,<code>Position[tiger]<\/code>,<code>Position[cat]<\/code>,<code>Position[snake]<\/code>,,,,,,
upTree,lab10,upTreeCount,What is the <em>parent<\/em> of <code>Position[tiger]<\/code> after performing <code>forest.find(Position[tiger])<\/code>?,C|<code>Position[bird]<\/code>,<code>Position[tiger]<\/code>,<code>Position[cat]<\/code>,<code>Position[snake]<\/code>,,,,,,
treeSet,lab10,,The <em>worst-case<\/em> performance of <code>TreeSet<\/code> operations depends on ____.,C|the height of the tree data structure,the number of black nodes in the tree,the number of duplicate entries in the tree,the random numbers generated for compression,,,,,,
hashSet,lab10,,What is the <em>expected<\/em> performance of <code>addAll<\/code> if both sets are implemented as <code>HashSet<\/code>s?,C|O(n),O(1),O(log n),O(n log n),O(n<sup>2<\/sup>),,,,,
treeSet,lab10,,What is the <em>worst-case<\/em> performance of single <code>contains<\/code> operation if the set is implemented as a <code>TreeSet<\/code> that delegates to a splay tree?,C|O(n),O(1),O(log n),O(n log n),O(n<sup>2<\/sup>),,,,,
setReview,lab10,,What is the <em>expected<\/em> performance of <code>add<\/code> if the set is implemented as a <code>SkipListSet<\/code>?,C|O(log n),O(1),O(n),O(n log n),O(n<sup>2<\/sup>),,,,,
setReview,lab10,,Using ____ helps improve the efficiency of <em>up trees<\/em>.,C|path compression find and balanced union,imbalanced union,chained find and skewed union,pay-as-you-got find and perfect union,path compression find and pay-as-you-go union,,,,,
setReview,lab10,,What is the <em>maximum<\/em> height of an up tree that contains <em>n<\/em> nodes?,C|n-1,n,n+1,log n,log(n) - 1,log(n) + 1,,,,
treeSet,lab10,,What is the <em>worst-case<\/em> performance of single <code>contains<\/code> operation if the set is implemented as a <code>TreeSet<\/code> that delegates to an AVL tree?,O(n),O(1),C|O(log n),O(n log n),O(n<sup>2<\/sup>),,,,,
treeSet,lab10,,What is the <em>worst-case<\/em> performance of single <code>contains<\/code> operation if the set is implemented as a <code>TreeSet<\/code> that delegates to a red-black tree?,O(n),O(1),C|O(log n),O(n log n),O(n<sup>2<\/sup>),,,,,
hashSet,lab10,,What is the <em>worst-case<\/em> performance of <code>add<\/code> if the set is implemented as <code>HashSet<\/code> that delegates to a <em>separate-chaining hash map<\/em> that uses a <em>search table<\/em> as the secondary map?,C|O(n),O(1),O(log n),O(n log n),O(n<sup>2<\/sup>),,,,,
hashSet,lab10,,What is the <em>worst-case<\/em> performance of <code>remove<\/code> if the set is implemented as <code>HashSet<\/code> that delegates to a <em>separate-chaining hash map<\/em> that uses a <em>red-black tree<\/em> as the secondary map?,O(n),O(1),C|O(log n),O(n log n),O(n<sup>2<\/sup>),,,,,
graphReview,lab11,,Which graph data structure should you use to <em>guarantee<\/em> worst-case O(1) performance of <code>getEdge<\/code> if <code>getEdge<\/code> is the primary graph operation that will be used?,C|adjacency matrix,adjacency map,adjacency list,edge list,,,,,,
graphReview,lab11,,Which graph data structure(s) <em>guarantee<\/em> worst-case O(1) performance of <code>opposite<\/code>?,C|adjacency matrix,C|adjacency map,C|adjacency list,C|edge list,,,,,,
graphReview,lab11,,Which graph data structure(s) has the <em>worst<\/em> performance of <code>insertVertex<\/code> in the worst case?,C|adjacency matrix,adjacency map,adjacency list,edge list,,,,,,
graphReview,lab11,,Which of the following statements is/are true?,"C|For a simple connected graph, <em>m >= n-1<\/em>","C|For a simple complete undirected graph, <em>m = (n(n-1))/2<\/em>","C|For a simple complete directed graph, <em>m = n(n-1)<\/em>","For a simple connected graph, <em>n >= m-1<\/em>",,,,,,
graphReview,lab11,,Why are <em>positional lists<\/em> used in our graph data structures?,C|to enable O(1) worst-case removal of vertices/edges from the global lists of vertices/edges,index-based lists cannot store positions,to enable O(1) worst-case retrieval of the number of vertices/edges in the graph,to enable O(m) worst-case retrieval of an iterable collection of vertices in the graph,,,,,,
graphADT,lab11,animalGraph,Which of the following correctly describe(s) edges that exist in this graph?,"C|{cat, bird}, {horse, snake}, {lizard, mouse}","(cat, bird), (horse, snake), (lizard, mouse)","{cat}, {bird}, {horse}, {snake}, {lizard}, {mouse}","(cat), (bird), (horse), (snake), (lizard), (mouse)",,,,,,
graphADT,lab11,animalGraph,Which of the following correctly describe(s) what could be returned by <code>graph.outDegree(Vertex[snake])<\/code>?,C|4,3,2,1,5,,,,,
graphADT,lab11,animalGraph,Which of the following correctly describe(s) what could be returned by <code>graph.incomingEdges(Vertex[tiger])<\/code>?,"C|{bird, tiger}, {squirrel, tiger}","(bird, tiger), (squirrel, tiger)","{bird}, {squirrel}","(bird), (squirrel)",,,,,,
graphADT,lab11,animalGraph,"Which of the following correctly describe(s) what would be output by the following:<br>Edge x = <code>graph.getEdge(Vertex[lion],Vertex[cat])<br>print( graph.opposite(Vertex[cat],x) )<\/code>?",C|Vertex[lion],lion,Vertex[lizard],Vertex[bird],bird,,,,,
graphADT,lab11,animalGraph,What would be removed from the graph if we perform <code>graph.removeVertex(Vertex[mouse])<\/code>?,C|Vertex[mouse],"C|{mouse, snake}, {mouse, lizard}","(mouse, snake), (lizard, mouse)",Vertex[snake],Vertex[lizard],,,,,
graphAlgorithmsReview,lab12,,What type of algorithm would solve the following problem?<br><em>The IT staff needs to wire together all routers in EB2 with ethernet cable while spending the least amount of money.<\/em>,C|minimum spanning tree,shortest path,graph traversal,,,,,,,
graphAlgorithmsReview,lab12,,"What type of algorithm would solve the following problem?<br><em>After a recent storm, several roads in the area were washed out. Residents in one neighborhood need to determine if it is possible to successfully drive to the nearest safety shelter.<\/em>",minimum spanning tree,shortest path,C|graph traversal,,,,,,,
graphAlgorithmsReview,lab12,,Which of the following algorithms is most efficiently implemented using an <em>adjacency matrix<\/em>?,depth-first search,breadth-first search,Dijkstra's algorithm,C|Floyd-Warshall's algorithm,Prim-Jarnik's algorithm,Kruskal's algorithm,,,,
graphAlgorithmsReview,lab12,,What type of algorithm would solve the following problem?<br><em>A family is planning a cross-country trip and needs to find a series of hotel reservations that produces the overall cheapest lodging cost for the trip.<\/em>,minimum spanning tree,C|shortest path,graph traversal,,,,,,,
graphAlgorithmsReview,lab12,,Which of the following algorithms have <strong>worst-case<\/strong> runtime of O(n)?,C|depth-first search,C|breadth-first search,Dijkstra's algorithm,Floyd-Warshall's algorithm,Prim-Jarnik's algorithm,Kruskal's algorithm,,,,
graphAlgorithmsReview,lab12,,Which of the following algorithms have <strong>worst-case<\/strong> runtime of O(n<sup>3<\/sup>)?,depth-first search,breadth-first search,Dijkstra's algorithm,C|Floyd-Warshall's algorithm,Prim-Jarnik's algorithm,Kruskal's algorithm,,,,
graphAlgorithmsReview,lab12,,Which of the following algorithms is most efficiently implemented using an <em>adjacency map<\/em> or an <em>adjacency list<\/em>?,C|depth-first search,C|breadth-first search,C|Dijkstra's algorithm,Floyd-Warshall's algorithm,C|Prim-Jarnik's algorithm,,,,,
graphAlgorithmsReview,lab12,,Which of the following algorithms uses a <em>forest of disjoint sets<\/em>?,depth-first search,breadth-first search,Dijkstra's algorithm,Floyd-Warshall's algorithm,Prim-Jarnik's algorithm,C|Kruskal's algorithm,,,,
graphAlgorithmsReview,lab12,,Which of the following algorithms uses an <em>adaptable priority queue<\/em>?,depth-first search,breadth-first search,C|Dijkstra's algorithm,Floyd-Warshall's algorithm,C|Prim-Jarnik's algorithm,Kruskal's algorithm,,,,
graphTraversal,lab12,,Which graph traversal algorithm uses a <em>queue<\/em>?,depth-first search,C|breadth-first search,,,,,,,,
graphTraversal,lab12,animalGraph,"What are the first four discovery edges (in order of discovery) if we perform <strong>depth-first search<\/strong> started at vertex \""cat\"" and visit adjacenct vertices in alphabetical order?","C|{cat, bird}, {bird, lizard}, {lizard, horse}, {horse, snake}","(cat, bird), (bird, lizard), (lizard, horse), (horse, snake)","{cat, bird}, {cat, horse}, {cat, lion}, {cat, lizard}","(cat, bird), (cat, horse), (cat, lion), (cat, lizard)",,,,,,
graphTraversal,lab12,animalGraph,"What are the first two back edges (in order) if we perform <strong>depth-first search<\/strong> started at vertex \""cat\"" and visit adjacenct vertices in alphabetical order?","C|{cat, lizard}, {cat, horse}","{cat, bird}, {cat, horse}","{cat, lion}, {cat, bird}","{cat, lizard}, {lizard, mouse}",,,,,,
graphTraversal,lab12,animalGraph,"What are the first four discovery edges (in order of discovery) if we perform <strong>breadth-first search<\/strong> started at vertex \""cat\"" and visit adjacenct vertices in alphabetical order?","{cat, bird}, {bird, lizard}, {lizard, horse}, {horse, snake}","(cat, bird), (bird, lizard), (lizard, horse), (horse, snake)","C|{cat, bird}, {cat, horse}, {cat, lion}, {cat, lizard}","(cat, bird), (cat, horse), (cat, lion), (cat, lizard)",,,,,,
graphTraversal,lab12,animalGraph,"What are the first two cross edges (in order) if we perform <strong>breadth-first search<\/strong> started at vertex \""cat\"" and visit adjacenct vertices in alphabetical order?","{lizard, cat}, {horse, cat}","C|{bird, lizard}, {horse, lizard}","{bird, lizard}, {cat, horse}","{cat, lizard}, {lizard, mouse}",,,,,,
shortestPath,lab12,shortestPathTable,Is the graph (represented in the table) a directed graph or undirected graph?,C|undirected,directed,,,,,,,,
shortestPath,lab12,shortestPathTable,What weight does Vertex[lizard] have when Vertex[lion] is marked <code>found=true<\/code> when performing Dijkstra's algorithm starting at Vertex[bird]?,C|9,5,7,4,,,,,,
shortestPath,lab12,shortestPathTable,In what order are the vertices discovered (<code>found=true<\/code>) when performing Dijkstra's algorithm starting at Vertex[bird]?,"C|Vertex[bird], Vertex[snake], Vertex[cat], Vertex[lion], Vertex[lizard]","Vertex[bird], Vertex[snake], Vertex[lion], Vertex[cat], Vertex[lizard]","Vertex[bird], Vertex[lion], Vertex[snake], Vertex[cat], Vertex[lizard]","Vertex[bird], Vertex[lizard], Vertex[lion], Vertex[snake], Vertex[cat]",,,,,,
shortestPath,lab12,shortestPathTable,What are the values (from top to bottom) in the <em>parent<\/em> column after performing Dijkstra's algorithm starting at Vertex[bird]?,"C|null, Vertex[snake], Vertex[cat], Vertex[lion], Vertex[bird]","null, Vertex[snake], Vertex[lion], Vertex[cat], Vertex[lizard]","null, Vertex[lion], Vertex[snake], Vertex[cat], Vertex[lizard]","null, Vertex[lizard], Vertex[lion], Vertex[snake], Vertex[cat]",,,,,,
shortestPath,lab12,shortestPathTable,What are the values (from top to bottom) in the <em>weight<\/em> column after performing Dijkstra's algorithm starting at Vertex[bird]?,"C|0, 4, 5, 7, 3","0, 4, 3, 7, 5","0, 4, 5, 9 ,3","0, 9, 4, 3, 7","0, 9, 3, 5, 7",,,,,
shortestPath,lab12,floydGraph,What values appear in row <strong>C<\/strong> of the <strong>initial cost matrix<\/strong> when performing Floyd-Warshall's algorithm?,"C|6, 1, 0, 2, infinity","0, 5, 6 infinity, 3","6, 1, 0, 2, 0","6, 1, infinity, 2, 0","3, 0, infinity, 1, 0",,,,,
shortestPath,lab12,floydGraph,What values appear in row <strong>C<\/strong> of the <strong> cost matrix after k=1<\/strong> (where vertex A is represented as vertex 1) when performing Floyd-Warshall's algorithm?,"C|6, 1, 0, 2, 9","6, 1, 0, 2, infinity","6, 1, 0, 2, 0","6, 1, infinity, 2, 0","3, 0, infinity, 1, 0",,,,,
minimumSpanningTree,lab12,weightedAnimalGraph,What are the first <em>four<\/em> edges added to the minimum spanning tree if <em>Prim-Jarnik's algorithm<\/em> is performed starting at Vertex[tiger]?,"C|{bird, tiger}, {bird, snake}, {bird, cat}, {cat, lion}","{bird, tiger}, {bird, squirrel}, {bird, cat}, {bird, snake}","{bird, tiger}, {bird, snake}, {horse, snake}, {cat, horse}","{bird, tiger}, {bird, snake}, {lizard, snake}, {cat, horse}","{cat, lion}, {lizard, mouse}, {bird, snake}, {cat, lizard}",,,,,
minimumSpanningTree,lab12,weightedAnimalGraph,What are the first <em>four<\/em> edges added to the minimum spanning tree if <em>Kruskal's algorithm<\/em> is performed?,"C|{cat, lion}, {lizard, mouse}, {bird, snake}, {cat, lizard}","{bird, tiger}, {bird, snake}, {bird, cat}, {cat, lion}","{bird, tiger}, {bird, snake}, {horse, snake}, {cat, horse}","{cat, lion}, {cat, lizard}, {lizard, mouse}, {mouse, snake}",,,,,,
minimumSpanningTree,lab12,,"If a simple connected undirected graph has <em>17<\/em> vertices and <em>211<\/em> edges, how many edges are in the graph's <strong>minimum spanning tree<\/strong>?",C|16,211,210,18,not enough information is provided,,,,,
minimumSpanningTree,lab12,weightedAnimalGraph,What is the first edge ignored/discarded when performing <em>Kruskal's algorithm<\/em> on the graph?,"{bird, cat}","C|{bird, lizard}","{bird, snake}","{horse, lizard}","{squirrel, tiger}",,,,,
